{"ast":null,"code":"import { map } from 'rxjs/operators'; //Ajouter avec //\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ProduitService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://127.0.0.1:8000/products';\n  }\n  getProducts() {\n    return this.http.get(this.apiUrl);\n  }\n  //\n  rechercheProduit(produitUtilisateur, listeProduit) {\n    let produitTrouver = listeProduit.find(produit => produit.name === produitUtilisateur);\n    return produitTrouver || null;\n  }\n  getProductsFromDatabase() {\n    return this.http.get(this.apiUrl).pipe(map(products => {\n      /*for (const product of products) {\n        product.rechercheBarre = 0;\n      }*/\n      return products;\n    }));\n  }\n}\nProduitService.ɵfac = function ProduitService_Factory(t) {\n  return new (t || ProduitService)(i0.ɵɵinject(i1.HttpClient));\n};\nProduitService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProduitService,\n  factory: ProduitService.ɵfac,\n  providedIn: 'root'\n});\nexport { ProduitService };","map":{"version":3,"names":["map","ProduitService","constructor","http","apiUrl","getProducts","get","rechercheProduit","produitUtilisateur","listeProduit","produitTrouver","find","produit","name","getProductsFromDatabase","pipe","products","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\HP\\OneDrive\\Bureau\\shopinside2\\shopinside\\Front_end\\shopinsid\\src\\app\\services\\produit.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Produit } from '../models/produit.model';\r\nimport { map } from 'rxjs/operators'; //Ajouter avec //\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ProduitService {\r\n    private apiUrl = 'https://127.0.0.1:8000/products';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getProducts(): Observable<Produit[]> {\r\n        return this.http.get<Produit[]>(this.apiUrl);\r\n    }\r\n\r\n    //\r\n    rechercheProduit(produitUtilisateur : string, listeProduit : Produit[]) : Produit | null{\r\n        let produitTrouver = listeProduit.find(produit => produit.name === produitUtilisateur);\r\n        return produitTrouver || null;\r\n\r\n    }\r\n\r\n    getProductsFromDatabase(): Observable<Produit[]> {\r\n        return this.http.get<Produit[]>(this.apiUrl).pipe(\r\n          map((products: Produit[]) => {\r\n            /*for (const product of products) {\r\n              product.rechercheBarre = 0;\r\n            }*/\r\n            return products;\r\n          })\r\n        );\r\n      }\r\n      \r\n      \r\n}\r\n"],"mappings":"AAIA,SAASA,GAAG,QAAQ,gBAAgB,CAAC,CAAC;;;AAEtC,MAGaC,cAAc;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,iCAAiC;EAEV;EAExCC,WAAWA,CAAA;IACP,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,IAAI,CAACF,MAAM,CAAC;EAChD;EAEA;EACAG,gBAAgBA,CAACC,kBAA2B,EAAEC,YAAwB;IAClE,IAAIC,cAAc,GAAGD,YAAY,CAACE,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,KAAKL,kBAAkB,CAAC;IACtF,OAAOE,cAAc,IAAI,IAAI;EAEjC;EAEAI,uBAAuBA,CAAA;IACnB,OAAO,IAAI,CAACX,IAAI,CAACG,GAAG,CAAY,IAAI,CAACF,MAAM,CAAC,CAACW,IAAI,CAC/Cf,GAAG,CAAEgB,QAAmB,IAAI;MAC1B;;;MAGA,OAAOA,QAAQ;IACjB,CAAC,CAAC,CACH;EACH;;AAzBOf,cAAc,C;mBAAdA,cAAc,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdnB,cAAc,C;SAAdA,cAAc;EAAAoB,OAAA,EAAdpB,cAAc,CAAAqB,IAAA;EAAAC,UAAA,EAFX;AAAM;SAETtB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}